#include <stdio.h> 
#include <stdlib.h>

int betrag(int x){
  if (x < 0){
    return -x;
  }
  return x;
}


int* c_filter(int* bild) {
  int breite = bild [0];
  int hoehe = bild[1];
  int maxx = bild [2];
  int summe1 = 0;
  int summe2 = 0;
  int aktpx = 3;
  int neuerwert = 0;

  

  int *vergleich = malloc(sizeof(int)* hoehe * breite);
  int i = 0;
   while(i < hoehe*breite) {
    vergleich[i] = bild[i];
    i+=1;
  }


   vergleich[0] = breite;
   vergleich[1] = hoehe;
   vergleich[2] = maxx;
  
   while(aktpx < sizeof(bild)) {
    summe1 = 0;
    summe2 = 0;
    if ((aktpx-3) % breite != 0 && (aktpx - breite) > 2){
      summe1 += bild[aktpx - breite - 1];
      summe2 += bild[aktpx - breite - 1];
    }
    if ((aktpx-2) % breite != 0 && (aktpx - breite) > 2){
      summe1 += ((-1) * bild[aktpx - breite + 1]);
      summe2 += bild[aktpx - breite - 1];
    }
    if (aktpx - breite > 2){
      summe2 += 2* bild[aktpx + breite -1];
    }

    if ((aktpx-3) % breite != 0 && aktpx < (hoehe*breite - breite)) {
	summe1 += bild[aktpx + breite - 1];
	summe2 += -bild[aktpx + breite -1];
    }

    if (((aktpx - 2) % breite) != 0 && aktpx < hoehe*breite - breite){
	summe1 += -bild[aktpx + breite + 1];
	summe2 += -bild[aktpx + breite + 1];
    }

    if ((aktpx + breite) < hoehe*breite){
      summe2 += ((-2) * bild[aktpx + breite]);
    }
    
    if (((aktpx - 3) % breite) != 0){
      summe1 += (2 * bild[aktpx - 1]);
    }

    if (((aktpx - 2) % breite) != 0){
      summe1 += ((-2) * bild[aktpx + 1]);
    }


    neuerwert = (betrag(summe1) + betrag(summe2));
    if (neuerwert > maxx){
      neuerwert = maxx;
    }

    vergleich[aktpx] = neuerwert;
    aktpx+=1;
  }

  free(bild);
  return vergleich;
}
