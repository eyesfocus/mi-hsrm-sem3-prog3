#include <stdio.h>
#include <strings.h>

/*Tina Schedlbauer*/


int my_strcasecmp(const char *s1, const char *s2){
  int dist = ('a'-'A'); /*abstand zwischen gross und klein*/
 
  while(*s1 == *s2 || (*s1+dist) == *s2 || (*s1-dist) == *s2){   
    if((('A' <= *s1 && *s1 <= 'Z') && ('a' <= *s2 && *s2 <= 'z')) || (('a' <= *s1 && *s1 <= 'z') && ('A' <= *s2 && *s2 <='Z')) || (*s1 == *s2)){
      if(*s1 == '\0'){
	return 0;
      } 
      s1++;
      s2++;

    } else 
      return (*s1-*s2);
  }

  if(('A' <= *s1 && *s1 <= 'Z') && ('a' <= *s2 && *s2 <= 'z')){
    return ((*s1+dist) - *s2);
  }
 
  if(('a' <= *s1 && *s1 <= 'z') && ('A' <= *s2 && *s2 <='Z')){
    return ((*s1-dist) - *s2);
  }

  return (*s1-*s2);
}

int str(const char *s1, const char *s2){
  int dist = ('a'-'A'); /*Abstand zwischen Gross- und Kleinbuchstabe*/
 
  while(*s1 != '\0' || *s2 != '\0'){
    if(*s1 == *s2){
      s1++;
      s2++;
    } else if (((*s1+dist) == *s2) && ('A' <= *s1 && *s1 <= 'Z')){
      s1++;
      s2++;
    } else if (((*s1-dist) == *s2) && ('a' <= *s1 && *s1 <= 'z')){
      s1++;
      s2++;
    } else {
      return (*s1-*s2);
    }
  }
  return 0;
}

const char *my_index(const char *s, int c){
  while(*s){
    if (*s == c){
      return s;
    }
    ++s;
  }
  return NULL; 
}

int main(void){
  /*WAS WENN z.B 'u' mitgegeben wird, das nicht enthalten ist?*/
  printf("Index: 'Hallo', 'H': \n");
  printf("Bib: %d, %c\n", *index("Hallo", 'H'), 72);
  printf("meins: %d, %c\n", *my_index("Hallo", 'H'), 72);


  printf("\nstrcmp:\n");

  printf("Bib: %d\n", strcasecmp("hello", "hallo"));
  printf("meins: %d\n", my_strcasecmp("hello", "hallo"));
 printf("bla: %d\n", str("hello", "hallo"));

  printf("\n");

  printf("Bib: %d\n", strcasecmp("!abc", "!abc"));
  printf("meins: %d\n", my_strcasecmp("!abc", "!abc"));
 printf("bla: %d\n", str("!abc", "!abc"));

  printf("\n");


  printf("Bib: %d\n", strcasecmp("!", "A"));
  printf("meins: %d\n", my_strcasecmp("!", "A"));
 printf("bla: %d\n", str("!", "A"));
  printf("\n");

  printf("Bib: %d\n", strcasecmp("!", "a"));
  printf("meins: %d\n", my_strcasecmp("!", "a"));
 printf("bla: %d\n", str("!", "a"));
  printf("\n");

printf("Bib: %d\n", strcasecmp("A", "!"));
  printf("meins: %d\n", my_strcasecmp("A", "!"));
 printf("bla: %d\n", str("A", "!"));
  printf("\n");

  printf("Bib: %d\n", strcasecmp("!", "!"));
  printf("meins: %d\n", my_strcasecmp("!", "!"));
 printf("bla: %d\n", str("!", "!"));
  printf("\n");

  printf("Bib: %d\n", strcasecmp("HaLlO", "hAlLo"));
  printf("meins: %d\n", my_strcasecmp("HaLlO", "hAlLo"));
 printf("bla: %d\n", str("HaLlO", "hAlLo"));
  printf("\n");

 printf("Bib: %d\n", strcasecmp("HaLlohallo", "hAlLo"));
  printf("meins: %d\n", my_strcasecmp("HaLlohallo", "hAlLo"));
 printf("bla: %d\n", str("HaLlohallo", "hAlLo"));
  printf("\n");

 printf("Bib: %d\n", strcasecmp("HaLlO", "hAlLohallo"));
  printf("meins: %d\n", my_strcasecmp("HaLlO", "hAlLohallo"));
 printf("bla: %d\n", str("HaLlO", "hAlLohallo"));
  printf("\n");


 printf("Bib: %d\n", strcasecmp("@", "A"));
  printf("meins: %d\n", my_strcasecmp("@", "A"));
 printf("bla: %d\n", str("@", "A"));
  printf("\n");

  return 0;
}
